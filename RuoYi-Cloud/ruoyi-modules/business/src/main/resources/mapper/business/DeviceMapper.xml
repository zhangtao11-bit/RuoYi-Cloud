<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.DeviceMapper">

    <resultMap type="Device" id="DeviceResult">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="memo" column="memo"/>
    </resultMap>

    <sql id="selectDeviceVo">
        select id, code, name, memo        from business_device
    </sql>

    <select id="selectDeviceList" parameterType="Device" resultMap="DeviceResult">
        <include refid="selectDeviceVo"/>
        <where>
            <if test="code != null  and code != ''">
                and code = #{code}
            </if>
            <if test="name != null  and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="memo != null  and memo != ''">
                and memo = #{memo}
            </if>
        </where>
    </select>

    <select id="selectDeviceById" parameterType="Long"
            resultMap="DeviceResult">
        <include refid="selectDeviceVo"/>
        where id = #{id}
    </select>

    <insert id="insertDevice" parameterType="Device" useGeneratedKeys="true"
            keyProperty="id">
        insert into business_device
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="code != null">code,
            </if>
            <if test="name != null">name,
            </if>
            <if test="memo != null">memo,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="code != null">#{code},
            </if>
            <if test="name != null">#{name},
            </if>
            <if test="memo != null">#{memo},
            </if>
        </trim>
    </insert>

    <update id="updateDevice" parameterType="Device">
        update business_device
        <trim prefix="SET" suffixOverrides=",">
            <if test="code != null">code =
                #{code},
            </if>
            <if test="name != null">name =
                #{name},
            </if>
            <if test="memo != null">memo =
                #{memo},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDeviceById" parameterType="Long">
        delete from business_device where id = #{id}
    </delete>

    <delete id="deleteDeviceByIds" parameterType="String">
        delete from business_device where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>